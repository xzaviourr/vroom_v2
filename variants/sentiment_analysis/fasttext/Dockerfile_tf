# # Use the NVIDIA CUDA runtime as the base image
# # FROM nvidia/cuda:12.1.0-runtime-ubuntu20.04
# FROM nvidia/cuda:11.7.0-devel-ubuntu20.04
# # Set the working directory to /app
# # WORKDIR /app
# RUN mkdir app

# # Copy the Flask app files to the container

# ADD app.py app
# # COPY requirements.txt .

# # Install dependencies
# RUN apt-get update
# RUN apt-get install -y python3 python3-pip
# RUN pip3 install timm
# RUN pip3 install pipreqs
# RUN pipreqs --force --mode no-pin app
# RUN pip3 install -r app/requirements.txt


# # Expose port 3333 for the Flask app
# EXPOSE 3333

# # Start the Flask app when the container starts
# CMD ["python3", "app/app.py"]


# Use an official NVIDIA CUDA base image (11.7.0 gives an error)
# FROM nvidia/cuda:11.7.0-devel-ubuntu20.04
#FROM nvidia/cuda:12.1.0-runtime-ubuntu20.04
FROM tensorflow/tensorflow:latest-gpu
# Install necessary packages
#RUN apt-get update && \
#    apt-get install -y wget bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 curl net-tools && \
#    apt-get clean && \
#    rm -rf /var/lib/apt/lists/*

# Install Miniconda
#RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
#    sh Miniconda3-latest-Linux-x86_64.sh -bfp /usr/local && \
#    rm Miniconda3-latest-Linux-x86_64.sh && \
#    conda clean --all && \
#    ln -s /usr/local/bin/conda /usr/bin/conda

# Set the working directory to /app
WORKDIR /app

# Copy only rahul_tf.yml and app.py into the container at /app
#COPY rahul_tf.yml app.py /app/
COPY app.py /app
COPY fastText_imdb /app/fastText_imdb
RUN pip3 install pipreqs

RUN pipreqs --force --mode no-pin /app

RUN pip3 install -r /app/requirements.txt
# Install the required packages
#RUN conda env create -f rahul_tf.yml
#RUN conda env create -f my_tf.yml
# Activate the conda environment and run "conda init bash"
#SHELL ["conda", "run", "-n", "rahul_tf", "/bin/bash", "-c", "conda init bash"]
#SHELL ["conda", "run", "-n", "my_tf", "/bin/bash", "-c", "conda init bash"]
# # Download the pre-trained ResNet50 model
# ADD https://download.pytorch.org/models/resnet50-19c8e357.pth /app/models/resnet50.pth

# Expose port 3333 for the application
EXPOSE 5125

# Run the Flask application when the container launches
#CMD ["conda", "run", "-n", "rahul_tf", "python", "/app/app.py"]
CMD ["python", "/app/app.py"]
#CMD ["conda", "run", "-n", "my_tf", "python", "/app/app.py"]
# CMD ["conda", "run", "--no-capture-output", "-n", "docker_tf", "python", "/app/app.py"]
